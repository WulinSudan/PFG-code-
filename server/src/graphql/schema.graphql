  
  type Query {
    me: User
    personCount: Int!
    allPersons: [Person]!
    findPerson(name: String!): Person
  }

  type Mutation {
    loginUser(input: LoginInput!): AuthToken!
    signup(name: String!, password:String!): User!
    addPerson(name: String!, phone: Int!, street: String!, city: String!): Person
    editNumber(name: String!, phone: Int!): Person
    removePerson(name: String!): Int!
  }

  type Address {
    street: String!
    city: String!
  }

  type Person {
    name: String!
    phone: Int!
    address: Address!
  }

  type User {
    name: String!
    password: String!
  }

  type Token {
    value: String!
  }

  type AuthToken {
    access_token: String!
    user: User!
  }
  
  input RegisterInput{
    name: String!
    password: String!
  }
  
  input SignUpInput {
    name: String
    password: String
  }

  input LoginInput {
    name: String!
    password: String!
  }






